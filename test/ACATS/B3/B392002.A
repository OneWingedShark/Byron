-- B392002.A
--
--                             Grant of Unlimited Rights
--
--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,
--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained 
--     unlimited rights in the software and documentation contained herein.
--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making 
--     this public release, the Government intends to confer upon all 
--     recipients unlimited rights  equal to those held by the Government.  
--     These rights include rights to use, duplicate, release or disclose the 
--     released technical data and computer software in whole or in part, in 
--     any manner and for any purpose whatsoever, and to have or permit others 
--     to do so.
--
--                                    DISCLAIMER
--
--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR
--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED 
--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE
--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE 
--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A
--     PARTICULAR PURPOSE OF SAID MATERIAL.
--*
--
-- OBJECTIVE:
--      Check that a subprogram may not be a dispatching operation for two 
--      distinct tagged types (in a package).  
--
-- TEST DESCRIPTION:
--      Declare a package which defines two tagged types and two type 
--      extensions.  Declare a second package with two type extensions of
--      the tagged type in the first package.  Declare another two tagged 
--      types and two private extensions in the second package. Declare 
--      two tagged types in the private part of the second package. Verify 
--      that compiler generates errors for all subprograms declarations that 
--      are primitive operations for more than one tagged type.
--
--
-- CHANGE HISTORY:
--      06 Dec 94   SAIC    ACVC 2.0
--      09 Nov 95   SAIC    Update and repair for ACVC 2.0.1
--      26 Jun 98   EDS     Removed an illegal function declaration marked
--                          as "-- OK."

package B392002_0 is  

   type Tagged_Of_Pk0_T is tagged record
      Pk0_Data1 : Integer;
   end record;

   type Tagged_Of_Pk0_R is tagged record
      Pk0_Comp1 : Float;
   end record;

   type New_Tagged_Of_Pk0_T1 is new Tagged_Of_Pk0_T with record
      Pk0_Data2 : Float;
   end record;

   type New_Tagged_Of_Pk0_T2 is new Tagged_Of_Pk0_T with record
      Pk0_Comp2 : Boolean;
   end record;

end B392002_0;

     --=================================================================--

with B392002_0;
package B392002_1 is  
   -- Parameter types are declared in B392002_0.
   procedure Primitive_Of_Neither  
             (P1 : B392002_0.Tagged_Of_Pk0_T;
              P2 : B392002_0.Tagged_Of_Pk0_R);                     -- OK.
   function Primitive_Of_Neither_Func (P1 : B392002_0.New_Tagged_Of_Pk0_T1)
     return B392002_0.New_Tagged_Of_Pk0_T2;                        -- OK.  
   -------------------------------------------------------------

   type New_Tagged_Of_Pk1_T1 is new B392002_0.New_Tagged_Of_Pk0_T1 with
     record
        Pk1_Data2 : Float;
     end record;

   type New_Tagged_Of_Pk1_T2 is new B392002_0.New_Tagged_Of_Pk0_T1 with
     record
        Pk1_Comp2 : Integer;
     end record;

   type Tagged_Of_Pk1_U is tagged record
      Pk1_Dat  : Boolean;
   end record;

   type Tagged_Of_Pk1_S is tagged record
      Pk1_Comp : Integer;
   end record;

   -- Type of one parameter declared in B392002_0.   
   procedure Primitive_Of_One_Proc1    
             (P1 : B392002_0.Tagged_Of_Pk0_T;
              P2 : Tagged_Of_Pk1_S);                               -- OK.
   procedure Primitive_Of_One_Proc2    
             (P1 : B392002_0.Tagged_Of_Pk0_T;
              P2 : New_Tagged_Of_Pk1_T1);                          -- OK.
   function Primitive_Of_One_Func1 (P1 : Tagged_Of_Pk1_U)
     return B392002_0.Tagged_Of_Pk0_R;                             -- OK.
   function Primitive_Of_One_Func2 (P1 : B392002_0.New_Tagged_Of_Pk0_T1)
     return New_Tagged_Of_Pk1_T1;                                  -- OK.

   -- Parameter types are declared in this package.
   procedure Same_Type_Of_Both_Proc1
             (P1 : New_Tagged_Of_Pk1_T1;
              P2 : New_Tagged_Of_Pk1_T1);                          -- OK.

   -- Parameter types are declared in B392002_0.
   function Same_Type_Of_Both_Func (P1 : B392002_0.Tagged_Of_Pk0_T)
     return B392002_0.Tagged_Of_Pk0_T;                             -- OK.
   -------------------------------------------------------------

   -- Types for both parameters declared in this package.
   procedure Primitive_Of_Both_Proc1
             (P1 : Tagged_Of_Pk1_U;
              P2 : Tagged_Of_Pk1_S);                               -- ERROR:
                      -- Primitive operation for two different tagged types.
   procedure Primitive_Of_Both_Proc2
             (P1 : New_Tagged_Of_Pk1_T1;
              P2 : New_Tagged_Of_Pk1_T2);                          -- ERROR:
                      -- Primitive operation for two different tagged types.
   function Primitive_Of_Both_Func1 (P1 : Tagged_Of_Pk1_U)    
     return New_Tagged_Of_Pk1_T2;                                  -- ERROR:
                      -- Primitive operation for two different tagged types.
   -------------------------------------------------------------
   type Tagged_Of_Pk1_Q is tagged record
      Pk1_Dat : Boolean;
   end record;

   -- Type descendents 
   type New_Tagged_Of_Pk1_Q1 is new Tagged_Of_Pk1_Q with private;
   type New_Tagged_Of_Pk1_Q2 is new Tagged_Of_Pk1_Q with private;

   -- Types for both parameters declared in this package.
   procedure Primitive_Of_Both_Proc3
             (P1 : Tagged_Of_Pk1_Q; 
              P2 : New_Tagged_Of_Pk1_Q1);                          -- ERROR:
                      -- Primitive operation for two different tagged types.
   procedure Primitive_Of_Both_Proc4
             (P1 : New_Tagged_Of_Pk1_Q1; 
              P2 : New_Tagged_Of_Pk1_Q2);                          -- ERROR:
                      -- Primitive operation for two different tagged types.
   function Primitive_Of_Both_Func2 (P1 : Tagged_Of_Pk1_Q)         
     return New_Tagged_Of_Pk1_Q1;                                  -- ERROR:
                      -- Primitive operation for two different tagged types.
   function Primitive_Of_Both_Func3 (P1 : New_Tagged_Of_Pk1_Q1)           
     return New_Tagged_Of_Pk1_Q2;                                  -- ERROR:
                      -- Primitive operation for two different tagged types.
   -------------------------------------------------------------
   type Tagged_Private_Of_Pk1 is tagged private;

   procedure Same_Type_Of_Both_Proc2 
             (P1, P2 : Tagged_Private_Of_Pk1);                     -- OK.
   procedure Primitive_Of_Both_Proc5
             (P1 : Tagged_Private_Of_Pk1;
              P2 : Tagged_Of_Pk1_Q);                               -- ERROR:
                      -- Primitive operation for two different tagged types.
   -------------------------------------------------------------
   type Private_Tagged_Of_Pk1 is private;

   procedure Same_Type_Of_Both_Proc3
             (P1, P2 : Private_Tagged_Of_Pk1);                     -- OK.
   procedure Same_Type_Of_Both_Proc4
             (P1 : Private_Tagged_Of_Pk1;
              P2 : Tagged_Private_Of_Pk1);                         -- ERROR:
                      -- Primitive operation for two different tagged types.
   procedure Same_Type_Of_Both_Proc5
             (P1 : Private_Tagged_Of_Pk1;
              P2 : Tagged_Of_Pk1_Q);                               -- ERROR:
                      -- Primitive operation for two different tagged types.

private
   type New_Tagged_Of_Pk1_Q2 is new Tagged_Of_Pk1_Q with 
     record
        New_Data : Float;
     end record;

   type New_Tagged_Of_Pk1_Q1 is new Tagged_Of_Pk1_Q with
     record
        New_Data : Integer;
     end record;

   procedure Private_Primitive_Of_Both_Proc1
             (P1 : New_Tagged_Of_Pk1_Q1;
              P2 : Tagged_Of_Pk1_S);                               -- ERROR:
                      -- Primitive operation for two different tagged types.
   -------------------------------------------------------------
   type Tagged_Of_Pk1_V is tagged record
      Data : Integer;
   end record;

   type Tagged_Of_Pk1_W is tagged record
      Comp : Float;
   end record;

   procedure Private_Primitive_Of_Both_Proc2
             (P1 : Tagged_Of_Pk1_V; 
              P2 : Tagged_Of_Pk1_W);                               -- ERROR:
                      -- Primitive operation for two different tagged types.

   -------------------------------------------------------------
   type Tagged_Private_Of_Pk1 is tagged
     record
        Field_1 : Boolean;
     end record;
   type Private_Tagged_Of_Pk1 is tagged
     record
        Field_1 : Tagged_Private_Of_Pk1;
     end record;

   procedure Private_Primitive_Of_Both_Proc3
             (P1 : Tagged_Private_Of_Pk1;
              P2 : Private_Tagged_Of_Pk1);                         -- ERROR:
                      -- Primitive operation for two different tagged types.
   procedure Private_Primitive_Of_Both_Proc4
             (P1 : Private_Tagged_Of_Pk1;
              P2 : Tagged_Of_Pk1_Q);                               -- ERROR:
                      -- Primitive operation for two different tagged types.

end B392002_1;
