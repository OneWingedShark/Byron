-- B3930110.A
--
--                             Grant of Unlimited Rights
--
--     The Ada Conformity Assessment Authority (ACAA) holds unlimited
--     rights in the software and documentation contained herein. Unlimited
--     rights are the same as those granted by the U.S. Government for older
--     parts of the Ada Conformity Assessment Test Suite, and are defined
--     in DFAR 252.227-7013(a)(19). By making this public release, the ACAA
--     intends to confer upon all recipients unlimited rights equal to those
--     held by the ACAA. These rights include rights to use, duplicate,
--     release or disclose the released technical data and computer software
--     in whole or in part, in any manner and for any purpose whatsoever, and
--     to have or permit others to do so.
--
--                                    DISCLAIMER
--
--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR
--     DISCLOSED ARE AS IS. THE ACAA MAKES NO EXPRESS OR IMPLIED
--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE
--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE
--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A
--     PARTICULAR PURPOSE OF SAID MATERIAL.
--
--                                     Notice
--
--    The ACAA has created and maintains the Ada Conformity Assessment Test
--    Suite for the purpose of conformity assessments conducted in accordance
--    with the International Standard ISO/IEC 18009 - Ada: Conformity
--    assessment of a language processor. This test suite should not be used
--    to make claims of conformance unless used in accordance with
--    ISO/IEC 18017 and any applicable ACAA procedures.
--
--*
--
-- OBJECTIVE
--
--    Check that an abstract routine of an abstract partial view overridden
--    by a non-abstract routine in the private part requires overriding when
--    it is inherited if the private part is not visible where it is inherited.
--
-- TEST DESCRIPTION
--
--    This test checks the case noted by AI05-0068-1. Whether a subprogram
--    requires overriding or is abstract can depend on the view of the
--    subprogram that is inherited.

-- TEST FILES:
--      This test consists of the following files:
--      -> B3930110.A
--         B3930111.A
--         B3930112.A
--         B3930113.A
--
-- PASS/FAIL CRITERIA:
--      Each of the files B3930111.A, B3930112.A, and B3930113.A contain errors.
--      All errors in all these files must be detected to pass the test; no
--      errors should be detected in file B3930110.A.
--
-- CHANGE HISTORY:
--      05 Jan 2015   RLB   Created test, patterned after examples in
--                          AI05-0068-1.
--
--!

package B393011_P is
   type I is interface;
   procedure Op (X : I) is abstract;   -- Op[1]
end B393011_P;

with B393011_P;
package B393011_Q is
   type T is abstract new B393011_P.I with private;
   -- Op[1] inherited here as abstract.
   package Inner is
      procedure Inner_Op1 (X : T) renames Op;           -- OK.
         -- Inner_Op1 is abstract, which is OK as it is not primitive for T.
   end Inner;
private
   type T is new B393011_P.I with null record;
   procedure Op (X : T) is null;       -- Op[2]
end B393011_Q;

package B393011_Q.Child is
   type TC is new B393011_Q.T with null record;     -- OK.
   -- Op[2] (which is not abstract) inherited here.
   procedure Do_It (X : B393011_Q.T);
end B393011_Q.Child;

