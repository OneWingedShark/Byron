-- LXH40110.A
--
--                             Grant of Unlimited Rights
--
--     Under contracts F33600-87-D-0337, F33600-84-D-0280, MDA903-79-C-0687,
--     F08630-91-C-0015, and DCA100-97-D-0025, the U.S. Government obtained 
--     unlimited rights in the software and documentation contained herein.
--     Unlimited rights are defined in DFAR 252.227-7013(a)(19).  By making 
--     this public release, the Government intends to confer upon all 
--     recipients unlimited rights  equal to those held by the Government.  
--     These rights include rights to use, duplicate, release or disclose the 
--     released technical data and computer software in whole or in part, in 
--     any manner and for any purpose whatsoever, and to have or permit others 
--     to do so.
--
--                                    DISCLAIMER
--
--     ALL MATERIALS OR INFORMATION HEREIN RELEASED, MADE AVAILABLE OR
--     DISCLOSED ARE AS IS.  THE GOVERNMENT MAKES NO EXPRESS OR IMPLIED 
--     WARRANTY AS TO ANY MATTER WHATSOEVER, INCLUDING THE CONDITIONS OF THE
--     SOFTWARE, DOCUMENTATION OR OTHER INFORMATION RELEASED, MADE AVAILABLE 
--     OR DISCLOSED, OR THE OWNERSHIP, MERCHANTABILITY, OR FITNESS FOR A
--     PARTICULAR PURPOSE OF SAID MATERIAL.
--*
--
-- OBJECTIVE:
--      See file LXH40112.AM for details on this test
--
-- TEST DESCRIPTION:
--      See file LXH40112.AM for details on this test
--
-- SPECIAL REQUIREMENTS:
--      See file LXH40112.AM for details on this test
--
-- TEST FILES:
--      This test consists of the following files:
--
--    =>   LXH40110.A
--         LXH40111.A
--         LXH40112.AM
--
-- APPLICABILITY CRITERIA:
--      See file LXH40112.AM for details on this test
--
-- PASS/FAIL CRITERIA:
--      See file LXH40112.AM for details on this test
--
-- CHANGE HISTORY:
--      22 MAR 96   SAIC   Initial version
--      06 AUG 98   EDS    Moved post-restriction errors to LXH4014
--
--!

----------------------------------------------------------------- LXH4011_0

package LXH4011_0 is

  type Simple_Tag is tagged record
    Left, Right : Natural;
  end record;

  procedure Update( ST: Simple_Tag );

  type Tag_Pointer is access all Simple_Tag'Class;                -- violation
                            -- not an error, pragma has not yet been processed

  type Complex_Tag is new Simple_Tag with record
    Overdone : Boolean;
  end record;

  procedure Update( CT: Complex_Tag );

  procedure TC_Check;

end LXH4011_0;

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

with Report;
package body LXH4011_0 is

  procedure Update( ST: Simple_Tag ) is
  begin
    Report.Comment( "Update Simple_Tag" );
  end Update;

  procedure Update( CT: Complex_Tag ) is
  begin
    Report.Comment( "Update Complex_Tag" );
  end Update;

  An_Item    : aliased Simple_Tag'Class := Simple_Tag'(1,2);      -- violation
                            -- not an error, pragma has not yet been processed
  The_Item   : aliased Simple_Tag       := Simple_Tag'(1,2);
  Other_Item : aliased Complex_Tag      := (1,2,True);

  type Test_List is array(Natural range 1..3) of Tag_Pointer;

  Tests : Test_List := (An_Item'Access, Other_Item'Access, The_Item'Access);

  procedure TC_Check is
  begin
    for I in Tests'Range loop
      Update( Tests(Report.Ident_Int(I)).all );
    end loop;
  end TC_Check;

end LXH4011_0;
